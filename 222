#!/usr/bin/env python
#coding=utf-8
import re
import requests
import sys
import urlparse
import socket
import shodan
import threading
requests.packages.urllib3.disable_warnings()

header = {
    'Connection': 'close',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.110 Safari/537.36',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Encoding': 'gzip, deflate, sdch, br',
    'Accept-Language': 'zh-CN,zh;q=0.8',
}

shodan_api_key = '4iZBuwpykciIi3bTonkLCbQ36MXSKV2c'
api = shodan.Shodan(shodan_api_key)

iplist = []

def htmlurl():
     r = open('ss.txt', 'r')
     for urllt in r:
          r = urllt.strip('\n')
          try:
               url = 'http://' + r
               if ':80' in url:
                   url = urlparse.urlparse(url).scheme + '://' + urlparse.urlparse(url).netloc.split(':')[0]
               if ':443' in url:
                   url = 'https://' + url.replace(':443','').replace('http://','')
               html = requests.Session().get(url=url,headers=header,timeout=20)
               ip = socket.gethostbyname(r)
               context = html.text
               status = html.status_code
               title = re.search(r'<title>(.*)</title>',context)

               results = api.search('net:' + ip)
               for resulit in results['matches']:
                   iplist.append({'port':resulit['port'],'product':resulit['product']})
                   port = iplist

               if title:
                   title = title.group(1).strip().strip('\r').strip('\n')[:30]
               else:
                   title = 'None'

               banner = 'Not Found'
               try:
                   banner = html.headers['Server'][:20]
               except:
                   pass
               sys.stdout.write("%-26s %-26s %-26s %-26s %-26s %-16s\n" % (url,ip, port, status, banner, title))
          except:
              pass

def main():
    threads = []
    t = threading.Thread(target=htmlurl)
    threads.append(t)
    for tt in threads:
        tt.start()
    tt.join()


if __name__ == '__main__':
     main()
